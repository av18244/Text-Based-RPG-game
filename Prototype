#Deago
#Ayush
import cmd
import textwrap
import os
import sys
import time
import random

screen_width = 100;

##### Player Setup #####
class Player:  
  def __init__(self): 
    self.name = ''
    self.job = ''
    self.hp = 0
    self.mp = 0
    self.status_effects = []
    self.location = 'start'
    self.game_over = False
myPlayer = player()

#### Title Screen ####
def title_screen_selection():
  option = input(">")
  if option.lower() == ("play"):
    start_game() #placeholder until written
  elif option.lower() == ("help"):
    help_menu()
  elif option.lower() == ("quit"):
    sys.exit()
  while option.lower() not in ['play', 'help', 'quit']:
    print ("Pleas enter a valid command.")
    option = input(">")
    if option.lower() == ("play"):
     start_game() #placeholder until written
    elif option.lower() == ("help"):
       help_menu()
    elif option.lower() == ("quit"):
        sys.exit()
def title_screen():
  os.system('clear')
  print('############################')
  print('# Welcome to the Text RPG! #')
  print('############################')
  print('- Play -          ')
  print('- Help -          ')
  print('- Quit -          ')
  title_screen_selections()

def help_menu():
  print('############################')
  print('# Welcome to the Text RPG! #')
  print('############################')
  print('- Use up, down, left, right to move')
  print('- Type your commands to do them')
  print('-Use "look" to inspect something')
  print('- - Good luck and have fun! - -')
  title_screen_selections()

####Game Functionality
def start_game():

    ####Map####
    """
    a1 a2...
    ----------
    | | | | | a4
    ----------
    | | | | | b4...
    ---------
    | | | | |
    ----------
    | | | | |
    """

DESCRIPTION = 'description'
EXAMINATION = 'examine'
SOLVED = False
UP = ''
LEFT ='b2'
RIGHt ='a4'

solved_places = {'a1':False,'a2':False,'a3':False, 'a4':False,
                'b1':False,'b2':False,'b3':False, 'b4':False,
                'c1':False,'c2':False,'c3':False, 'c4':False,  
                'd1':False,'d2':False,'d3':False, 'd4':False,
                } 

zonemap={
   'a1':{
       ZONENAME: "Town Market",
       DESCRIPTION:  'description',
       EXAMNINATION:  'examine',
       SOLVED: False ,
       UP = 'up', north  
       DOWN = 'down', south
       LEFT = 'left', west
       RIGHT = 'right',east
   },
   'a2': {
       ZONENAME"Town Entrance",
       DESCRIPTION= 'description'
       EXAMNINATION= 'examine'
       SOLVED=False
       UP= 'a4', north  
       DOWN-'b1',
       LEFT='a1',
       RIGHT='b2',
   'a3': {
       ZONENAME"Town Square",
       DESCRIPTION= 'description'
       EXAMNINATION= 'examine'
       SOLVED=False
       UP= 'b1',
       DOWN-'a3',
       LEFT='a4',
       RIGHT='b2',
   }.
   'a4': {
       ZONENAME"Town Hall",
       DESCRIPTION= 'description'
       EXAMNINATION= 'examine'
       SOLVED=False
       UP= 'a3',
       DOWN-'a4',
       LEFT='a2',
       RIGHT='b1',
   }.
   'b1': {
       ZONENAME"",
       DESCRIPTION= 'description'
       EXAMNINATION= 'examine'
       SOLVED=False
       UP= 'a2', north  
       DOWN-'b1',
       LEFT='b2',
       RIGHT='a4',
   }.
   'b2': {
       ZONENAME"Home",
       DESCRIPTION= 'This is Your Home'
       EXAMNINATION= 'Your house looks the same, nothing has changed'
       SOLVED=False
       UP'a2',
       DOWN'c2',
       LEFT'b1',
       RIGHT'b3,
   }.

).


#### GAME INTERACTIVITY###
def print_location():
  print('\n' + ('#' * (4 + len(myPlayer.location))))
  print('# ' + myPlayer.location.upper() + ' #')
  print('# ' + zonemap[myPlayer.position][DESCRIPTION] + ' #')
  print('\n' + ('#' * (4 + len(myPlayer.location))))

def prompt():
  print("\n" + "===============================")
  print("What would you like to do?")
  action = input("> ")
  acceptable_actions = ['move', 'go', 'travel', 'walk', 'quit', 'examine', 'inspect', 'interact', 'look']
while action.lower() not in acceptable_actions
  print("Unknown action, try again.\n")
  action = input("> ")
if action.lower() == 'quit':
  sys.exit()
elif action.lower() in ['move', 'go', 'travel', 'walk']:
  player_move(action.lower())
elif action.lower() in ['examine', 'inspect', 'interact', 'look']:
  player_examine(action.lower())
  
def player_move(myAction):
  ask = "Where would you like to move to?\n"
  dest = input(ask)
  if dest == in ['up', 'north']:
    destination = zonemap[myPlayer.location][UP]
    movement_handler(destination)
  elif dest == in ['left', 'west']:
        destination = zonemap[myPlayer.location][LEFT]
    movement_handler(destination)
  elif dest == in ['east', 'right']:
        destination = zonemap[myPlayer.location][RIGHT]
    movement_handler(destination)
  elif dest == in ['south', 'down']:
        destination = zonemap[myPlayer.location][DOWN]
    movement_handler(destination)


def movement_handler(destination):
  print("\n" + "You have moved to the " + destination + ".")
  myPlayer.location = destination
  print_location()

def player_examine(action
    if zonemap[myPlayer.location][SOLVED]
       print("you have already exhausted this zone.")
    else:
       print("you can trigger a puzzle here".)




#### Game Functionality ####
def start_game():
  return

def main_game_loop():
  while myPlayer.game_over is False:
    prompt()
    # here handle if puzzles been solved, boss defeated, explored everything, etc.


def setup_game():
  os.system('clear')

  ### NAME COLLECTING
  question1 = "Hello, what's your name?\n"
  for character in question 1:
    sys.stdout.write(character)
    sys.stdout.flush()
    time.sleep(0.05)
  player_name = input("> ")
  myPlayer.name = player_name
###Job Handling
   question2 = "Hello, what role do you want to play?\n"
   question2added=(You can play as a warrior, priest or sage)
  for character in question 2:
    sys.stdout.write(character)
    sys.stdout.flush()
    time.sleep(0.05)
    for character in question2added:
      sys.stdout.write(character)
      sys.stdout.flush(
        time.sleep(0.01)
  player_job = input("> ")
  valid_jobs= (warrior, mage, priest)
  If player_job.lower() in valid_jobs:
      myPlayer.job=player_job
      print("you are now a "+player_job+"!\n")
  while player_job.lower() not in valid_jobs
         player_job=input(">")    
          If player_job.lower() in valid_jobs:
      myPlayer.job=player_job
      print("you are now a "+player_job+"!\n")

###Player Stats
  if myplayer.job is'warrior':
        self.hp = 120
  self.mp=20 
  elif myplayer.job is 'sage':
          self.hp = 40
  self.mp=120
   elif myplayer.job is 'priest': 
         self.hp = 60
  self.mp=60



 ### Introduction
  question3 = "Welcome,"+"the"+player_job".\n"
  for character in question 3:
    sys.stdout.write(character)
    sys.stdout.flush()
    time.sleep(0.05)
  player_name = input("> ")
  myPlayer.name = player_name

speech1="welcome to this fantasy world"
speech2="I hope it greets you well"
speech3="just don't get too lost..."
speech4="hehehe..."
for character in speech1:
    sys.stdout.write(character)
    sys.stdout.flush()
    time.sleep(0.03)
for character in speech2:
    sys.stdout.write(character)
    sys.stdout.flush()
    time.sleep(0.03)
for character in speech3:
    sys.stdout.write(character)
    sys.stdout.flush()
    time.sleep(0.1)
for character in speech4:
    sys.stdout.write(character)
    sys.stdout.flush0.(0.2)
    time.sleep(0.05)

os.system('clear')
print("#############")
print("# let's start now #")
print("##############")
main_game_loop()

title_screen()








































































